# Configuration for Security Token Service

# Spring
management.endpoint.metrics.enabled=false
server.servlet.context-path=/

# Spring: Actuator
management.endpoint.health.show-details=always

# Spring: some security
spring.servlet.multipart.enabled=false
spring.application.admin.enabled=false
spring.error.include-stacktrace=never

# Spring: LDAP configuration
ldap.urls=ldap://localhost:389
ldap.base.dn=dc=localdomain,dc=local
ldap.username=cn=ldapadm,dc=localdomain,dc=local
ldap.password=root123
ldap.user.dn.pattern =uid={0}
sts.ldap.dn=cn=users

# Server: enfore HTTPS
# You need a signed SSL certificate, for developing create your own self-signed with
# keytool -genkeypair -alias springboot -keyalg RSA -keysize 4096 -storetype JKS -keystore springboot.jks -validity 3650 -storepass secret
# keytool -importkeystore -srckeystore springboot.jks -destkeystore springboot.pkcs12 -deststoretype pkcs12
server.port=8443
server.ssl.key-store=classpath:springboot.pkcs12
server.ssl.key-store-password=secret
server.ssk.key-store-type=pkcs12
server.ssl.key-alias=springboot
server.ssl.key-password=secret

# Security Token Service: Configuration

# Prefix for all Token, set bipro: for BiPRO Token to standard
sts.tokenPrefix=bipro:

# if set, then the BiPROVersion will be checked against
sts.expectedBiPROVersion=

# validity of token in seconds, typically 30minutes (=1800sec)
sts.token_lifetime=1800

# Issuer written to JWT
sts.jwt.issuer=SecurityTokenService
sts.jwt.algorithm=HMAC256
# this should be read from a Vault or similar and not in plaintext
sts.jwt.secret=thisisaverysecretstringtosignthejwt

# Settings for VDG Tickets, leave empty if not needed
sts.vdg.keystore.url=
sts.vdg.keystore.password=
sts.company.keystore.url=
sts.company.keystore.password=
sts.company.privatekey.alias=
sts.company.privatekey.password=